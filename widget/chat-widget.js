(function() {
    window.addEventListener('load', function() {
        var chatConfig = window.chatConfig || {
            url: 'https://default-url.com', // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à URL
            startEndpoint: '/start',
            chatEndpoint: '/chat',
            widgetSrc: 'https://default-url.com/widget/chat-widget.js' // –ü—É—Ç—å –∫ –≤–∏–¥–∂–µ—Ç—É
        };

        let isCaptchaRequired = false; // –§–ª–∞–≥ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è, —Ç—Ä–µ–±—É–µ—Ç—Å—è –ª–∏ –≤–≤–æ–¥ –∫–∞–ø—á–∏
        let captchaQuestion = ''; // –í–æ–ø—Ä–æ—Å –∫–∞–ø—á–∏
        let savedMessage = ''; // –°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–µ—Ä–µ–¥ –∫–∞–ø—á–µ–π
        let isSendingMessage = false; // –§–ª–∞–≥ –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π

        const chatIcon = document.createElement('div');
        chatIcon.classList.add('chat-icon');
        chatIcon.innerHTML = 'üí¨';
        document.body.appendChild(chatIcon);

        const chatBox = document.createElement('div');
        chatBox.classList.add('chat-box');
        chatBox.innerHTML = `
            <div class="chat-header">AI Chat Assistant</div>
            <div class="chat-messages" id="chatMessages"></div>
            <div class="chat-input-wrapper">
                <textarea id="userMessage" placeholder="–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ..." rows="1" style="height: 36px; overflow-y: hidden; padding: 8px; padding-right: 70px;"></textarea>
                <button id="sendMessage"><i class="send-icon">‚û§</i></button>
            </div>
        `;
        document.body.appendChild(chatBox);

        chatIcon.addEventListener('click', function() {
            chatBox.classList.toggle('show');
        });

        let thread_id = localStorage.getItem('thread_id');

        async function initThread() {
            if (!thread_id) {
                const response = await fetch(chatConfig.url + chatConfig.startEndpoint);
                const data = await response.json();
                thread_id = data.thread_id;
                localStorage.setItem('thread_id', thread_id);
            }
        }

        setTimeout(initThread, 500);

        // –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—Ä–æ—Å–∞ –∫–∞–ø—á–∏ —Å —Å–µ—Ä–≤–µ—Ä–∞
        async function fetchCaptcha() {
            try {
                const response = await fetch('/get-captcha');
                const data = await response.json();
                captchaQuestion = data.question;
                isCaptchaRequired = true; // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –¥–ª—è –∫–∞–ø—á–∏
                appendMessage('assistant', `–í–≤–µ–¥–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã—Ä–∞–∂–µ–Ω–∏—è: ${captchaQuestion}`); // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –≤–æ–ø—Ä–æ—Å –∫–∞–ø—á–∏ –≤ —á–∞—Ç–µ
            } catch (error) {
                console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫–∞–ø—á–∏:", error);
            }
        }

        // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –∫–∞–ø—á—É
        async function verifyCaptcha(answer) {
            try {
                const response = await fetch('/check-captcha', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ answer: answer }),
                });
                const data = await response.json();
                if (data.success) {
                    isCaptchaRequired = false; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ –∫–∞–ø—á–∏
                    appendMessage('assistant', '–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–π–¥–µ–Ω–∞, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º!');

                    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
                    if (savedMessage) {
                        await sendMessageAfterCaptcha(savedMessage);
                        savedMessage = ''; // –û—á–∏—â–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                    }
                } else {
                    appendMessage('assistant', '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.');
                }
                return data.success;
            } catch (error) {
                console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∫–∞–ø—á–∏:", error);
                return false;
            }
        }

        // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –∫–∞–ø—á–∏
        async function sendMessageAfterCaptcha(message) {
            appendMessage('user', message); // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            blockInput(); // –ë–ª–æ–∫–∏—Ä—É–µ–º –≤–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è

            showLoadingIndicator(); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –æ–∂–∏–¥–∞–Ω–∏—è

            try {
                const response = await fetch(chatConfig.url + chatConfig.chatEndpoint, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ message, thread_id }),
                });

                if (response.status === 429) { // –ï—Å–ª–∏ –ª–∏–º–∏—Ç –ø—Ä–µ–≤—ã—à–µ–Ω, –∑–∞–ø—É—Å–∫–∞–µ–º –∫–∞–ø—á—É
                    await fetchCaptcha();
                    hideLoadingIndicator(); // –£–±–∏—Ä–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –æ–∂–∏–¥–∞–Ω–∏—è
                } else {
                    const data = await response.json();
                    let assistantMessage = data.response.replace(/\„Äê.*?\„Äë/g, ''); // –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ —Å–∏–º–≤–æ–ª—ã
                    hideLoadingIndicator(); // –£–±–∏—Ä–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞
                    appendMessage('assistant', assistantMessage); // –û—Ç–≤–µ—Ç –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
                }
            } catch (error) {
                hideLoadingIndicator(); // –£–±–∏—Ä–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø—Ä–∏ –æ—à–∏–±–∫–µ
                appendMessage('assistant', '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è.');
            }

            unblockInput(); // –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –≤–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è
            focusInput(); // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ñ–æ–∫—É—Å –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞
        }

        // –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
        async function sendMessage() {
            if (isSendingMessage) return; // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –ª–∏ —É–∂–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            const message = document.getElementById('userMessage').value.trim();
            if (message === '') return;

            // –ë–ª–æ–∫–∏—Ä—É–µ–º –≤–≤–æ–¥ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è
            blockInput();

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ –∞–∫—Ç–∏–≤–Ω–∞ –∫–∞–ø—á–∞, –ø—Ä–æ–≤–µ—Ä—è–µ–º –≤–≤–µ–¥–µ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç
            if (isCaptchaRequired) {
                const captchaPassed = await verifyCaptcha(message);
                document.getElementById('userMessage').value = ''; // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ

                // –ï—Å–ª–∏ –∫–∞–ø—á–∞ –ø—Ä–æ–π–¥–µ–Ω–∞, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                if (captchaPassed && savedMessage) {
                    await sendMessageAfterCaptcha(savedMessage);
                    savedMessage = ''; // –û—á–∏—â–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                }

                unblockInput(); // –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –≤–≤–æ–¥ –ø–æ—Å–ª–µ –∫–∞–ø—á–∏
                focusInput(); // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ñ–æ–∫—É—Å –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞
                return;
            }

            // –ï—Å–ª–∏ –∫–∞–ø—á–∞ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            appendMessage('user', message); // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            document.getElementById('userMessage').value = ''; // –û—á–∏—Å—Ç–∫–∞ –ø–æ–ª—è

            // –£–±–∏—Ä–∞–µ–º placeholder –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
            document.getElementById('userMessage').removeAttribute('placeholder');

            showLoadingIndicator(); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –æ–∂–∏–¥–∞–Ω–∏—è

            try {
                const response = await fetch(chatConfig.url + chatConfig.chatEndpoint, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ message, thread_id }),
                });

                if (response.status === 429) { // –ï—Å–ª–∏ –ª–∏–º–∏—Ç –ø—Ä–µ–≤—ã—à–µ–Ω, –∑–∞–ø—É—Å–∫–∞–µ–º –∫–∞–ø—á—É
                    savedMessage = message; // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ—Å–ª–µ –∫–∞–ø—á–∏
                    await fetchCaptcha();
                    hideLoadingIndicator(); // –£–±–∏—Ä–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –æ–∂–∏–¥–∞–Ω–∏—è
                } else {
                    const data = await response.json();
                    let assistantMessage = data.response.replace(/\„Äê.*?\„Äë/g, ''); // –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ —Å–∏–º–≤–æ–ª—ã
                    hideLoadingIndicator(); // –£–±–∏—Ä–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞
                    appendMessage('assistant', assistantMessage); // –û—Ç–≤–µ—Ç –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
                }
            } catch (error) {
                hideLoadingIndicator(); // –£–±–∏—Ä–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø—Ä–∏ –æ—à–∏–±–∫–µ
                appendMessage('assistant', '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è.');
            }

            unblockInput(); // –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –≤–≤–æ–¥ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
            focusInput(); // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ñ–æ–∫—É—Å –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞
        }

        // –§—É–Ω–∫—Ü–∏—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –≤–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
        function blockInput() {
            isSendingMessage = true;
            document.getElementById('userMessage').disabled = true;
            document.getElementById('sendMessage').disabled = true;
        }

        // –§—É–Ω–∫—Ü–∏—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –≤–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
        function unblockInput() {
            isSendingMessage = false;
            document.getElementById('userMessage').disabled = false;
            document.getElementById('sendMessage').disabled = false;
        }

        // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ —Ñ–æ–∫—É—Å–∞ –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞
        function focusInput() {
            document.getElementById('userMessage').focus();
        }

        // –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —á–∞—Ç
        function appendMessage(sender, message) {
            const messagesDiv = document.getElementById('chatMessages');
            const newMessage = document.createElement('div');
            newMessage.classList.add('chat-message', sender);
            newMessage.innerHTML = message.replace(/\n/g, '<br>'); // –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–∞ —Å—Ç—Ä–æ–∫–∏
            messagesDiv.appendChild(newMessage);
            messagesDiv.scrollTop = messagesDiv.scrollHeight; // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –≤–Ω–∏–∑
        }

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
        function showLoadingIndicator() {
            const messagesDiv = document.getElementById('chatMessages');
            const loadingIndicator = document.createElement('div');
            loadingIndicator.id = 'loadingIndicator';
            loadingIndicator.classList.add('chat-message', 'assistant', 'loading-animation');
            loadingIndicator.innerHTML = `<span class="dot">.</span><span class="dot">.</span><span class="dot">.</span>`;
            messagesDiv.appendChild(loadingIndicator);
            messagesDiv.scrollTop = messagesDiv.scrollHeight;
        }

        // –£–±–∏—Ä–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
        function hideLoadingIndicator() {
            const loadingIndicator = document.getElementById('loadingIndicator');
            if (loadingIndicator) {
                loadingIndicator.remove();
            }
        }

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
        document.getElementById('sendMessage').addEventListener('click', sendMessage);

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è Enter –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
        document.getElementById('userMessage').addEventListener('keydown', function(event) {
            if (event.key === 'Enter' && !event.shiftKey) {
                event.preventDefault(); // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –ø–µ—Ä–µ–Ω–æ—Å —Å—Ç—Ä–æ–∫–∏
                sendMessage(); // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
            }
        });

        const userMessage = document.getElementById('userMessage');
        const minHeight = 36;
        const maxHeight = 150;
        userMessage.style.height = `${minHeight}px`;

        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –≤—ã—Å–æ—Ç—ã –ø–æ–ª—è –≤–≤–æ–¥–∞
        userMessage.addEventListener('input', function() {
            userMessage.style.height = `${minHeight}px`; // –°–±—Ä–æ—Å –≤—ã—Å–æ—Ç—ã –ø–µ—Ä–µ–¥ –∏–∑–º–µ–Ω–µ–Ω–∏–µ–º
            const scrollHeight = userMessage.scrollHeight;

            if (scrollHeight > minHeight) {
                userMessage.style.height = `${Math.min(scrollHeight, maxHeight)}px`; // –ò–∑–º–µ–Ω–µ–Ω–∏–µ –≤—ã—Å–æ—Ç—ã –ø–æ–ª—è –≤–≤–æ–¥–∞
            }
        });
    });

    // –°—Ç–∏–ª–∏ –¥–ª—è —á–∞—Ç–∞, –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–¥ –±–µ–ª–æ-—Å–∏–Ω–∏–π –¥–∏–∑–∞–π–Ω
    const style = document.createElement('style');
    style.textContent = `
        .chat-icon {
            position: fixed;
            bottom: 20px;
            right: 20px;
            width: 60px;
            height: 60px;
            background-color: #007bff; /* –°–∏–Ω–∏–π —Ü–≤–µ—Ç –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–π —Å—Ö–µ–º—ã */
            border-radius: 50%;
            display: flex;
            justify-content: center;
            align-items: center;
            cursor: pointer;
            color: white;
            font-size: 30px;
            z-index: 9999;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
            transition: background-color 0.3s ease;
        }

        .chat-icon:hover {
            background-color: #0056b3; /* –¢–µ–º–Ω–æ-—Å–∏–Ω–∏–π –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ */
        }

        .chat-box {
            position: fixed;
            bottom: 80px;
            right: 20px;
            width: 350px;
            height: 500px;
            background-color: #ffffff; /* –ë–µ–ª—ã–π —Ñ–æ–Ω —á–∞—Ç–∞ */
            border-radius: 10px;
            display: none;
            flex-direction: column;
            z-index: 9999;
            box-shadow: 0 4px 16px rgba(0, 0, 0, 0.2);
            font-family: Arial, sans-serif; /* –û—Å–Ω–æ–≤–Ω–æ–π —à—Ä–∏—Ñ—Ç —Å–∞–π—Ç–∞ */
        }

        .chat-box.show {
            display: flex;
        }

        .chat-header {
            background-color: #007bff; /* –°–∏–Ω–∏–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ —á–∞—Ç–∞ */
            color: white;
            padding: 15px;
            font-size: 18px;
            font-weight: bold;
            text-align: center;
            border-radius: 10px 10px 0 0;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        .chat-messages {
            flex: 1;
            padding: 15px;
            overflow-y: auto;
            background-color: #f5f5f5; /* –°–≤–µ—Ç–ª—ã–π —Ñ–æ–Ω —Å–æ–æ–±—â–µ–Ω–∏–π */
            color: black;
            font-size: 16px;
        }

        .chat-input-wrapper {
            display: flex;
            padding: 10px;
            background-color: #fff; /* –ë–µ–ª—ã–π —Ñ–æ–Ω –≤–≤–æ–¥–∞ */
            border-top: 1px solid #ddd;
            position: relative;
        }

        .chat-input-wrapper textarea {
            flex: 1;
            padding: 8px;
            border: 1px solid #ccc;
            border-radius: 10px;
            resize: none;
            background-color: #f1f1f1;
            font-size: 16px;
            min-height: 36px;
            max-height: 150px;
            overflow-y: hidden;
            padding-right: 70px;
        }

        .chat-input-wrapper button {
            position: absolute;
            right: 15px; /* –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –æ—Ç—Å—Ç—É–ø —Å–ø—Ä–∞–≤–∞ */
            top: 50%;
            transform: translateY(-50%);
            background-color: #007bff; /* –°–∏–Ω–∏–π —Ü–≤–µ—Ç –∫–Ω–æ–ø–∫–∏ */
            border: none;
            border-radius: 50%;
            width: 36px;
            height: 36px;
            display: flex;
            justify-content: center;
            align-items: center;
            color: white;
            font-size: 18px;
            cursor: pointer;
        }

        .send-icon {
            font-size: 18px;
            line-height: 18px;
        }

        .chat-message {
            margin-bottom: 10px;
            padding: 12px;
            border-radius: 8px;
            background-color: #e0e0e0; /* –°–≤–µ—Ç–ª–æ-—Å–µ—Ä—ã–π —Ñ–æ–Ω —Å–æ–æ–±—â–µ–Ω–∏–π */
            color: black;
            word-wrap: break-word;
        }

        .chat-message.user {
            background-color: #007bff; /* –°–∏–Ω–∏–π —Ü–≤–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */
            color: white;
            text-align: right;
        }

        .chat-message.assistant {
            background-color: #f5f5f5;
            color: black;
            text-align: left;
        }

        #loadingIndicator {
            color: #007bff; /* –°–¥–µ–ª–∞–µ–º —Ç–æ—á–∫–∏ —è—Ä–∫–æ-—Å–∏–Ω–∏–º–∏ */
            font-style: italic;
            display: flex;
            align-items: center;
            font-size: 24px; /* –£–≤–µ–ª–∏—á–∏–º —Ä–∞–∑–º–µ—Ä —Ç–æ—á–µ–∫ */
        }

        .loading-animation .dot {
            display: inline-block;
            font-size: 24px; /* –£–≤–µ–ª–∏—á–∏–º —Ä–∞–∑–º–µ—Ä —Ç–æ—á–µ–∫ */
            margin-right: 2px;
            animation: blink 1s infinite;
        }

        .loading-animation .dot:nth-child(2) {
            animation-delay: 0.2s;
        }

        .loading-animation .dot:nth-child(3) {
            animation-delay: 0.4s;
        }

        @keyframes blink {
            0% { opacity: 0; }
            50% { opacity: 1; }
            100% { opacity: 0; }
        }
    `;
    document.head.appendChild(style);
})();
